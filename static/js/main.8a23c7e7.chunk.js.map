{"version":3,"sources":["component/avatar/Avatar.component.jsx","component/textbox/Textbox.component.jsx","component/displayText/displayText.component.jsx","component/details/details.component.jsx","component/button/button.component.jsx","component/buttons/buttons.component.jsx","component/card/card.component.jsx","component/cardlist/cardlist.component.jsx","App.js","index.js"],"names":["Avatar","props","alt","name","className","src","id","set","TextBox","type","kind","onChange","handleChange","defaultValue","value","val","hidden","DisplayText","Tag","edit","cls","error","length","console","log","Details","editName","editEmail","nameBox","emailBox","email","Button","style","onClick","handleClick","btnval","Buttons","events","monster","btn1Text","btn2Text","btn1Event","onEditNameClick","btn2Event","onEditEmailClick","onNameSubmit","onEmailSubmit","onCancelClick","Card","textBoxProps","editNameVal","onNameChange","handleSubmit","handleCancel","editEmailVal","onEmailChange","emailError","CardList","e","preventDefault","state","monsters","target","modifiedMonsters","resetButtonsOfOtherMonsters","setState","resetButtonProps","validateEmail","test","String","toLowerCase","forEach","dir","monstersArray","fetch","then","response","json","this","map","key","marginLeft","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAGaA,G,MAAQ,SAACC,GAElB,OACQ,yBAAKC,IAAKD,EAAME,KAAMC,UAFlB,MAEoCC,IAAG,+BAA0BJ,EAAMK,GAAhC,gBAA0CL,EAAMM,IAAhD,qBCJ1CC,EAAU,SAACP,GAIpB,OACI,2BAAOK,GAAIL,EAAMK,GAAIF,UAAWH,EAAMG,UAAWK,KAAMR,EAAMS,KAAMC,SAAUV,EAAMW,aAAcC,aAAcZ,EAAMY,aAAcC,MAASb,EAAMc,IAAKC,OAAQf,EAAMe,UCHhKC,G,MAAc,SAAChB,GACxB,IAAIiB,EAAI,GAIR,GAAGjB,EAAMkB,KAAKA,KAAK,CACf,IAAIC,EAAM,yBACPnB,EAAMkB,KAAKE,OAASpB,EAAMkB,KAAKE,MAAMC,OAAO,IAC3CC,QAAQC,IAAI,iBACZD,QAAQC,IAAIvB,EAAMkB,KAAKJ,KACvBK,GAAU,UAEdF,EAAM,kBAAC,EAAD,CAASZ,GAAIL,EAAMkB,KAAKb,GAAIF,UAAWgB,EAAKV,KAAMT,EAAMkB,KAAKT,KAAMK,IAAKd,EAAMkB,KAAKJ,IAAKH,aAAcX,EAAMkB,KAAKP,oBAGvHM,EAAM,yBAAKd,UAAW,6BAA8BH,EAAMa,OAG9D,OACI,6BAAMI,EAjBE,MCHHO,EAAS,SAACxB,GACnB,IAAIyB,EAAWzB,EAAMyB,SACjBC,EAAY1B,EAAM0B,UAElBC,EAAU,kBAAC,EAAD,CAAatB,GAAIL,EAAMK,GAAII,KAAM,OAAQI,MAAOb,EAAME,KAAMgB,KAAMO,IAC5EG,EAAW,kBAAC,EAAD,CAAavB,GAAIL,EAAMK,GAAII,KAAM,QAASI,MAAOb,EAAM6B,MAAOX,KAAMQ,IAMnF,OALGD,EAASP,KACRU,EAAW,GACLF,EAAUR,OAChBS,EAAQ,IAGR,yBAAKxB,UAAW,eACZ,6BACKwB,GAEL,6BACKC,KCjBJE,G,MAAS,SAAC9B,GAEnB,IAAI+B,EAAQ/B,EAAMG,UAAU,kBAC5B,OACI,2BAAOE,GAAML,EAAMK,GAAIF,UAAW4B,EAAOvB,KAAM,SAAUwB,QAAShC,EAAMiC,YAAapB,MAAOb,EAAMkC,WCJ7FC,EAAS,SAACnC,GACnB,IAAIoC,EAASpC,EAAMoC,OACfC,EAAUrC,EAAMqC,QAChBC,EAAW,YACXC,EAAW,aACXC,EAAYJ,EAAOK,gBACnBC,EAAYN,EAAOO,iBAavB,OAZGN,EAAQZ,UAAYY,EAAQX,aAC3BY,EAAW,SACXC,EAAW,SACRF,EAAQZ,SACPe,EAAYJ,EAAOQ,aACdP,EAAQX,YACbc,EAAYJ,EAAOS,eAEvBH,EAAaN,EAAOU,eAKpB,6BACI,kBAAC,EAAD,CAAQzC,GAAMgC,EAAQhC,GAAIF,UAAW,eAAgB8B,YAAaO,EAAWN,OAAQI,IACrF,kBAAC,EAAD,CAAQjC,GAAMgC,EAAQhC,GAAIF,UAAW,eAAgB8B,YAAaS,EAAWR,OAAQK,MCpBpFQ,EAAO,SAAC/C,GAEjB,IAAIqC,EAAUrC,EAAMqC,QAGdZ,EAAW,CACbpB,GAAIgC,EAAQhC,GACZI,KAAK,OACLK,IAAKuB,EAAQW,aAAaC,YAC1BtC,aAAaX,EAAMoC,OAAOc,aAC1BC,aAAanD,EAAMoC,OAAOQ,aAC1BQ,aAAapD,EAAMoC,OAAOU,cAC1B5B,KAAOmB,EAAQZ,UAGbC,EAAY,CACdrB,GAAIgC,EAAQhC,GACZI,KAAK,QACLK,IAAKuB,EAAQW,aAAaK,aAC1B1C,aAAaX,EAAMoC,OAAOkB,cAC1BH,aAAanD,EAAMoC,OAAOS,cAC1BO,aAAapD,EAAMoC,OAAOU,cAC1B5B,KAAMmB,EAAQX,UACdN,MAAQiB,EAAQkB,YAGpB,OACI,6BACI,yBAAKpD,UAAW,OACZ,kBAAC,EAAD,CAAQE,GAAIgC,EAAQhC,GAAIH,KAAMmC,EAAQnC,KAAMI,IAAkB,GAAX+B,EAAQhC,GAAO,GAAI,KAE1E,yBAAKF,UAAW,OACZ,kBAAC,EAAD,CAASE,GAAIgC,EAAQhC,GAAIH,KAAMmC,EAAQnC,KAAM2B,MAAOQ,EAAQR,MAAOJ,SAAUA,EAAUC,UAAWA,KAEtG,yBAAKvB,UAAW,OACZ,kBAAC,EAAD,CAASE,GAAIgC,EAAQhC,GAAIgC,QAASA,EAASD,OAAQpC,EAAMoC,YCiK1DoB,G,wDApMX,aAAc,IAAD,8BACT,gBA+BJf,gBAAkB,SAACgB,GACfA,EAAEC,iBACFpC,QAAQC,IAAI,qBAEZ,IAAIc,EAAU,EAAKsB,MAAMC,SAASH,EAAEI,OAAOxD,GAAG,GAE1CyD,EAAmB,EAAKC,4BAA4BN,EAAEI,OAAOxD,GAAG,GAEpEgC,EAAQnB,MAAO,EACfmB,EAAQZ,UAAW,EACnBY,EAAQX,WAAY,EACpBoC,EAAiBL,EAAEI,OAAOxD,GAAG,GAAKgC,EAElC,EAAK2B,SAAS,CACVJ,SAAWE,KA9CN,EAiDbC,4BAA8B,SAAC1D,GAC3B,IAAIuD,EAAW,EAAKD,MAAMC,SAE1B,OADAA,EAAW,EAAKK,iBAAiBL,EAASvD,IAnDjC,EAsDbsC,iBAAmB,SAACc,GAChBA,EAAEC,iBACFpC,QAAQC,IAAI,sBACZ,IAAIc,EAAU,EAAKsB,MAAMC,SAASH,EAAEI,OAAOxD,GAAG,GAC1CyD,EAAmB,EAAKC,4BAA4BN,EAAEI,OAAOxD,GAAG,GACpEgC,EAAQnB,MAAO,EACfmB,EAAQZ,UAAW,EACnBY,EAAQX,WAAY,EACpBoC,EAAiBL,EAAEI,OAAOxD,GAAG,GAAKgC,EAElC,EAAK2B,SAAS,CACVJ,SAAWE,KAjEN,EAqEbhB,cAAe,SAACW,GACZA,EAAEC,iBACFpC,QAAQC,IAAI,kBACZ,IAAIqC,EAAW,EAAKD,MAAMC,SACtBvB,EAAU,EAAKsB,MAAMC,SAASH,EAAEI,OAAOxD,GAAG,GAC3CgC,EAAQkB,YAAclB,EAAQkB,WAAWlC,OAAO,IAC/CgB,EAAQkB,WAAa,IAEzBK,EAASH,EAAEI,OAAOxD,GAAG,GAAKgC,EAC1BuB,EAAW,EAAKK,iBAAiBL,GACjC,EAAKI,SAAS,CACVJ,SAASA,KAhFJ,EAoFbM,cAAgB,SAACrC,GAEb,MADU,8DACCsC,KAAKC,OAAOvC,GAAOwC,gBAtFrB,EAyFbJ,iBAAmB,SAACL,EAASvD,GAiBzB,OAfGA,EACCuD,EAASU,SAAQ,SAAAjC,GACVA,EAAQhC,GAAG,IAAIA,IACdgC,EAAQnB,MAAO,EACfmB,EAAQZ,UAAW,EACnBY,EAAQX,WAAY,MAI5BkC,EAASU,SAAQ,SAAAjC,GACbA,EAAQnB,MAAO,EACfmB,EAAQZ,UAAW,EACnBY,EAAQX,WAAY,KAGrBkC,GA1GE,EA6GbhB,aAAc,SAACa,GACXA,EAAEC,iBACFpC,QAAQC,IAAI,uBACZ,IAAIc,EAAU,EAAKsB,MAAMC,SAASH,EAAEI,OAAOxD,GAAG,GAC9CgC,EAAQnC,KAAOmC,EAAQW,aAAaC,YACpCZ,EAAQnB,MAAO,EACfmB,EAAQZ,UAAW,EACnBY,EAAQX,WAAY,EACpB,IAAIkC,EAAW,EAAKD,MAAMC,SAE1B,EAAKI,SAAS,CACVJ,SAAWA,KAxHN,EA4Hbf,cAAgB,SAACY,GACbA,EAAEC,iBACFpC,QAAQC,IAAI,wBACZ,IAAIc,EAAU,EAAKsB,MAAMC,SAASH,EAAEI,OAAOxD,GAAG,GACa,GAAvD,EAAK6D,cAAc7B,EAAQW,aAAaK,eACvC/B,QAAQC,IAAI,uBACZc,EAAQkB,WAAa,wBAEtBlB,EAAQR,MAAQQ,EAAQW,aAAaK,aACrChB,EAAQnB,MAAO,EACfmB,EAAQZ,UAAW,EACnBY,EAAQX,WAAY,GAExB,IAAIkC,EAAW,EAAKD,MAAMC,SAE1B,EAAKI,SAAS,CACVJ,SAAWA,KA5IN,EAgJbV,aAAc,SAACO,GACXA,EAAEC,iBAGF,IAAIE,EAAW,EAAKD,MAAMC,SACtBvB,EAAUuB,EAASH,EAAEI,OAAOxD,GAAG,GACnCgC,EAAQW,aAAaC,YAAcQ,EAAEI,OAAOhD,MAC5C+C,EAASH,EAAEI,OAAOxD,GAAG,GAAKgC,EAE1B,EAAK2B,SAAS,CACVJ,SAAWA,KA1JN,EA8JbN,cAAgB,SAACG,GACbA,EAAEC,iBACFpC,QAAQC,IAAI,gBACZ,IAAIqC,EAAW,EAAKD,MAAMC,SACtBvB,EAAUuB,EAASH,EAAEI,OAAOxD,GAAG,GACnCgC,EAAQW,aAAaK,aAAeI,EAAEI,OAAOhD,MAC7C+C,EAASH,EAAEI,OAAOxD,GAAG,GAAKgC,EAE1B,EAAK2B,SAAS,CACVJ,SAAWA,KAvKN,EA4KbxB,OAAS,CACLK,gBAAkB,EAAKA,gBACvBE,iBAAmB,EAAKA,iBACxBG,cAAgB,EAAKA,cACrBF,aAAe,EAAKA,aACpBC,cAAgB,EAAKA,cACrBK,aAAa,EAAKA,aAClBI,cAAgB,EAAKA,eAjLrBhC,QAAQiD,IAAI,+BACZ,EAAKZ,MAAQ,CACXC,SAAW,IAJJ,E,gEAQO,IAAD,OACftC,QAAQiD,IAAI,6BACZ,IAAIC,EAAgB,GAEpBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,IACFJ,EAAgBI,GAEFN,SAAQ,SAACjC,GACnBA,EAAQnB,MAAO,EACfmB,EAAQX,WAAY,EACpBW,EAAQZ,UAAW,EACnBY,EAAQW,aAAe,CACnBC,YAAcZ,EAAQnC,KACtBmD,aAAehB,EAAQR,UAI/B,EAAKmC,SAAS,CACVJ,SAAWY,S,+BA2JlB,IAAD,OACJ,OACI,yBAAKrE,UAAU,OACV0E,KAAKlB,MAAMC,SAASkB,KAAI,SAAAzC,GAAO,OAC5B,yBAAK0C,IAAK1C,EAAQhC,GAAIF,UAAU,eAAe4B,MAAO,CAACiD,WAAW,KAC9D,kBAAC,EAAD,CAAMD,IAAK1C,EAAQhC,GAAIgC,QAASA,EAASD,OAAQ,EAAKA,kB,GA7LvD6C,IAAMC,YCgChBC,G,MAAM,SAACnF,GAClB,OACE,kBAAC,EAAD,QChCJoF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8a23c7e7.chunk.js","sourcesContent":["import React from 'react'\nimport './avatar.style.css'\n\nexport const Avatar =(props) =>{\n    var style = \"img\"\n    return(\n            <img alt={props.name} className={style} src={`https://robohash.org/${props.id}?set=${props.set}&size=150x150`}></img>\n    )\n}","import React from 'react'\n\nexport const TextBox = (props)=>{\n    //if(props.val.indexOf(\"@\")!=-1){\n        //console.log(props.val)\n    //}\n    return(\n        <input id={props.id} className={props.className} type={props.kind} onChange={props.handleChange} defaultValue={props.defaultValue} value = {props.val} hidden={props.hidden}/>\n    );\n}","import React from 'react';\nimport {TextBox} from '../textbox/Textbox.component'\nimport './display.style.css'\n\nexport const DisplayText = (props)=>{\n    var Tag=\"\";\n    var error = \"\"\n    //console.log(props)\n\n    if(props.edit.edit){\n        var cls = \"twelve columns editBox\"\n        if(props.edit.error && props.edit.error.length>0){\n            console.log(\"display Error\")\n            console.log(props.edit.val)\n            cls = cls+\" error\";\n        }\n        Tag = <TextBox id={props.edit.id} className={cls} kind={props.edit.kind} val={props.edit.val} handleChange={props.edit.handleChange}/>\n        \n    }else {\n        Tag = <div className={'centertext twelve columns'}>{props.value}</div>\n    }\n\n    return(\n        <div>{Tag}{error}</div>\n    );\n}","import React from 'react'\nimport {DisplayText} from '../displayText/displayText.component'\n\nexport const Details =(props) => {\n    var editName = props.editName;\n    var editEmail = props.editEmail;\n    \n    var nameBox = <DisplayText id={props.id} kind={'name'} value={props.name} edit={editName}></DisplayText>\n    var emailBox = <DisplayText id={props.id} kind={'email'} value={props.email} edit={editEmail}></DisplayText>\n    if(editName.edit){\n        emailBox = \"\"\n    } else if(editEmail.edit){\n        nameBox=\"\";\n    }\n    return(\n        <div className={'ten columns'}>\n            <div>\n                {nameBox}\n            </div>\n            <div>\n                {emailBox}\n            </div>\n        </div>\n\n    )\n}","import React from 'react'\nimport './button.style.css'\n\nexport const Button = (props) =>{\n    //console.dir(props.id,props.btnval,props.hidden);\n    var style = props.className+\" button visible\"\n    return(\n        <input id = {props.id} className={style} type={'button'} onClick={props.handleClick} value={props.btnval}/>\n    )\n/*     \n\n        <button id = {props.id} className={style} type={'button'} onClick={props.handleClick} >{props.btnval}</button>\n    var style = \"button visible \"+props.className;\n    var disabled = false\n    if(props.hidden && (props.btnval===\"Submit\" || props.btnval===\"Cancel\")){\n        style = \"button invisible \"\n    }\n    if(props.hidden && (props.btnval === \"Edit Name\" || props.btnval === \"Edit Email\")){\n        disabled = true;\n    }\n    //console.log(style)\n    var btnVal = props.btnval;\n    var evnt = props.handleClick;\n    if(!props.edit.buttonHidden){\n        if(btnVal===\"Edit Name\"){\n            btnVal= \"Submit\"\n            evnt = props.edit.handleSubmit\n        } \n        if(btnVal===\"Edit Email\"){\n            btnVal= \"Cancel\"\n            evnt = props.edit.handleCancel\n        }\n    }\n\n    return(\n        <button id = {props.id} className={style} type={'button'} onClick={evnt}>{btnVal}</button>\n        //<button id = {props.id} className={style} type={'button'} onClick={props.handleClick} disabled={disabled?true:false}>{props.btnval}<///button>\n        // <a id={props.id} href={'#'} className={style} role={'button'} onClick={props.handleClick}>{props.btnval}</a>\n    ) */\n}","import React from 'react'\nimport {Button} from '../button/button.component'\n\nexport const Buttons =(props)=>{\n    var events = props.events;\n    var monster = props.monster\n    var btn1Text = \"Edit Name\";\n    var btn2Text = \"Edit Email\";\n    var btn1Event = events.onEditNameClick\n    var btn2Event = events.onEditEmailClick\n    if(monster.editName || monster.editEmail){\n        btn1Text = \"Submit\"\n        btn2Text = \"Cancel\"\n        if(monster.editName){\n            btn1Event = events.onNameSubmit\n        }else if(monster.editEmail){\n            btn1Event = events.onEmailSubmit\n        }\n        btn2Event  = events.onCancelClick\n    }\n\n\n    return(\n        <div>\n            <Button id = {monster.id} className={'five columns'} handleClick={btn1Event} btnval={btn1Text}/>\n            <Button id = {monster.id} className={'five columns'} handleClick={btn2Event} btnval={btn2Text}/>\n        </div>\n    )\n}","import React from 'react'\nimport {Avatar} from '../avatar/Avatar.component'\nimport {Details} from '../details/details.component'\nimport {Buttons} from '../buttons/buttons.component'\n\nexport const Card = (props) =>{\n    \n    var monster = props.monster;\n    //console.log(!monster.buttonProps.editNameButtonHidden)\n\n    const editName = {\n        id: monster.id,\n        kind:'text',\n        val: monster.textBoxProps.editNameVal,\n        handleChange:props.events.onNameChange,\n        handleSubmit:props.events.onNameSubmit,\n        handleCancel:props.events.onCancelClick,\n        edit : monster.editName\n    }\n\n    const editEmail = {\n        id: monster.id,\n        kind:'email',\n        val: monster.textBoxProps.editEmailVal,\n        handleChange:props.events.onEmailChange,\n        handleSubmit:props.events.onEmailSubmit,\n        handleCancel:props.events.onCancelClick,\n        edit: monster.editEmail,\n        error : monster.emailError\n    }\n\n    return(\n        <div>\n            <div className={'row'}>\n                <Avatar id={monster.id} name={monster.name} set={((monster.id*17)%13)%9}/>\n            </div>\n            <div className={'row'}>\n                <Details id={monster.id} name={monster.name} email={monster.email} editName={editName} editEmail={editEmail}/>\n            </div>\n            <div className={'row'}>\n                <Buttons id={monster.id} monster={monster} events={props.events}></Buttons>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {Card} from \"../card/card.component\"\nimport './cardlist.styles.css'\n\nclass CardList extends React.Component{\n    constructor(){\n        super();\n        console.dir(\"constructor is called first\");\n        this.state = {\n          monsters : [],\n        }\n    }\n\n    componentDidMount(){\n        console.dir(\"didmount is called second\");\n        var monstersArray = [];\n\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(json => {;\n                monstersArray = json;\n                //console.log(monstersArray);\n                monstersArray.forEach((monster)=>{\n                    monster.edit = false;\n                    monster.editEmail = false;\n                    monster.editName = false;\n                    monster.textBoxProps = {\n                        editNameVal : monster.name,\n                        editEmailVal : monster.email\n                    }\n                });\n                //console.log(monstersArray);\n                this.setState({\n                    monsters : monstersArray\n                });\n            });\n    }\n    onEditNameClick = (e) =>{\n        e.preventDefault();\n        console.log(\"edit name clicked\")\n        //console.log(e.target.id);\n        var monster = this.state.monsters[e.target.id-1];\n        //console.log(monster);\n        var modifiedMonsters = this.resetButtonsOfOtherMonsters(e.target.id-1);\n        //console.log(monster)\n        monster.edit = true;\n        monster.editName = true;\n        monster.editEmail = false;\n        modifiedMonsters[e.target.id-1] = monster;\n        //console.log(mod)\n        this.setState({\n            monsters : modifiedMonsters\n        })\n    }\n    resetButtonsOfOtherMonsters = (id)=>{\n        var monsters = this.state.monsters;\n        monsters = this.resetButtonProps(monsters,id);\n        return monsters;\n    }\n    onEditEmailClick = (e) =>{\n        e.preventDefault(); \n        console.log(\"edit email clicked\")\n        var monster = this.state.monsters[e.target.id-1];\n        var modifiedMonsters = this.resetButtonsOfOtherMonsters(e.target.id-1);\n        monster.edit = true;\n        monster.editName = false;\n        monster.editEmail = true;\n        modifiedMonsters[e.target.id-1] = monster;\n        //console.log(mod)\n        this.setState({\n            monsters : modifiedMonsters\n        })\n    }\n\n    onCancelClick =(e)=>{\n        e.preventDefault()\n        console.log(\"cancel clicked\")\n        var monsters = this.state.monsters;\n        var monster = this.state.monsters[e.target.id-1];\n        if(monster.emailError && monster.emailError.length>0){\n            monster.emailError = \"\";\n        }\n        monsters[e.target.id-1] = monster;\n        monsters = this.resetButtonProps(monsters);\n        this.setState({\n            monsters:monsters\n        })\n    }\n\n    validateEmail = (email) => {\n        var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        return reg.test(String(email).toLowerCase());\n    }\n\n    resetButtonProps = (monsters,id) =>{\n        //console.log(id);\n        if(id){\n            monsters.forEach(monster => {\n                if(monster.id-1!==id){\n                    monster.edit = false;\n                    monster.editName = false;\n                    monster.editEmail = false;\n                }\n            });\n        } else{\n            monsters.forEach(monster => {\n                monster.edit = false;\n                monster.editName = false;\n                monster.editEmail = false;\n            });\n        }\n        return monsters;\n    }\n\n    onNameSubmit =(e)=>{\n        e.preventDefault();\n        console.log(\"submit name clicked\");\n        var monster = this.state.monsters[e.target.id-1];\n        monster.name = monster.textBoxProps.editNameVal;\n        monster.edit = false;\n        monster.editName = false;\n        monster.editEmail = false;\n        var monsters = this.state.monsters;\n        //console.log(mod)\n        this.setState({\n            monsters : monsters\n        })\n    }\n\n    onEmailSubmit = (e)=>{\n        e.preventDefault();\n        console.log(\"submit email clicked\")\n        var monster = this.state.monsters[e.target.id-1];\n         if(this.validateEmail(monster.textBoxProps.editEmailVal)==false){\n             console.log(\"enter a valid email\")\n             monster.emailError = \"Enter a Valid Email\" \n        } else { \n            monster.email = monster.textBoxProps.editEmailVal;\n            monster.edit = false;\n            monster.editName = false;\n            monster.editEmail = false;\n        }\n        var monsters = this.state.monsters;\n        //console.log(mod)\n        this.setState({\n            monsters : monsters\n        })\n    }\n\n    onNameChange =(e) => {\n        e.preventDefault()\n        //console.log(\"typing name\")\n        //console.log(e.target.id);\n        var monsters = this.state.monsters;\n        var monster = monsters[e.target.id-1];\n        monster.textBoxProps.editNameVal = e.target.value\n        monsters[e.target.id-1] = monster;\n        //console.log(mod)\n        this.setState({\n            monsters : monsters\n        })\n\n    }\n    onEmailChange = (e) => {\n        e.preventDefault();\n        console.log(\"typing email\")\n        var monsters = this.state.monsters;\n        var monster = monsters[e.target.id-1];\n        monster.textBoxProps.editEmailVal = e.target.value\n        monsters[e.target.id-1] = monster;\n        //console.log(mod)\n        this.setState({\n            monsters : monsters\n        })\n    }\n    \n\n    events = {\n        onEditNameClick : this.onEditNameClick,\n        onEditEmailClick : this.onEditEmailClick,\n        onCancelClick : this.onCancelClick,\n        onNameSubmit : this.onNameSubmit,\n        onEmailSubmit : this.onEmailSubmit,\n        onNameChange:this.onNameChange,\n        onEmailChange : this.onEmailChange\n    }\n\n\n    render(){\n        return(\n            <div className=\"row\" >\n                {this.state.monsters.map(monster => (\n                    <div key={monster.id} className=\"four columns\" style={{marginLeft:20}}>\n                        <Card key={monster.id} monster={monster} events={this.events}/>\n                    </div>\n                 ))}\n            </div>\n        )\n    }\n}\n\nexport default CardList","import React from 'react';\nimport CardList from \"./component/cardlist/cardlist.component\";\nimport './App.css';\n\n/* class App extends Component {\n  constructor(){\n    super();\n    console.dir(\"constructor is called first\");\n    this.state = {\n      monsters : []\n    }\n  }\n\n  componentDidMount(){\n    console.dir(\"didmount is called second\");\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(json => this.setState({\n        monsters : json\n      }))\n  }\n\n  \n\n  render(){\n    return(\n      <div>\n        {this.state.monsters.map(monster => <div key={monster.id}> Hey! {monster.name}</div>)}\n        <CardList monsters={this.state.monsters}/>\n      </div>\n      \n    )\n  }\n\n} */\n\nexport const App = (props) => {\n  return(\n    <CardList />\n  )\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}